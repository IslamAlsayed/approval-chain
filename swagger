openapi: 3.0.0
info:
  version: "1.0.0"
  title: Approval Chain
  description: The API for approval chain for projects
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ESLAMALSAYED8133/approval_chain/1.0.0
paths:
  '/approve/role/{role}':
    get:
      tags:
        - projects
      description: Returns all projects in sequence for a specific role.
      operationId: index
      parameters:
        - in: path
          name: role
          required: true
          description: Role to filter the approvals (e.g., admin1, admin2, admin3).
          schema:
            type: string
      responses:
        '200':
          description: All projects in sequence for the specified role.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    project_id:
                      type: integer
                      example: 101
                    sequence:
                      type: integer
                      example: 1
                    approved:
                      type: boolean
                      example: 0
                    deleted_at:
                      type: string
                      format: date-time
                      example: '2024-01-01 01:45 PM'
                    created_at:
                      type: string
                      format: date-time
                      example: '2024-01-01 01:45 PM'
                    updated_at:
                      type: string
                      format: date-time
                      example: '2024-01-01 01:45 PM'
                    project:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 101
                        title:
                          type: string
                          example: 'Project Title'
                        status:
                          type: string
                          example: 'pending'
                        created_at:
                          type: string
                          format: date-time
                          example: '2024-01-01 01:45 PM'
                        updated_at:
                          type: string
                          format: date-time
                          example: '2024-01-01 01:45 PM'

  '/approve/completed':
    get:
      tags:
        - projects
      description: Returns all completed projects in sequence.
      operationId: completed
      responses:
        '200':
          description: All completed projects.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    project_id:
                      type: integer
                      example: 101
                    sequence:
                      type: integer
                      example: 4
                    approved:
                      type: boolean
                      example: 1
                    deleted_at:
                      type: string
                      format: date-time
                      example: '2024-01-01 01:45 PM'
                    created_at:
                      type: string
                      format: date-time
                      example: '2024-01-01 01:45 PM'
                    updated_at:
                      type: string
                      format: date-time
                      example: '2024-01-01 01:45 PM'
                    project:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 101
                        title:
                          type: string
                          example: 'Project Title'
                        status:
                          type: string
                          example: 'completed'
                        created_at:
                          type: string
                          format: date-time
                          example: '2024-01-01 01:45 PM'
                        updated_at:
                          type: string
                          format: date-time
                          example: '2024-01-01 01:45 PM'

  '/approve/trashed':
    get:
      tags:
        - projects
      description: Returns all trashed projects in sequence.
      operationId: trashed
      responses:
        '200':
          description: All trashed projects.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    project_id:
                      type: integer
                      example: 101
                    sequence:
                      type: integer
                      example: 4
                    approved:
                      type: boolean
                      example: 0
                    deleted_at:
                      type: string
                      format: date-time
                      example: '2024-01-01 01:45 PM'
                    created_at:
                      type: string
                      format: date-time
                      example: '2024-01-01 01:45 PM'
                    updated_at:
                      type: string
                      format: date-time
                      example: '2024-01-01 01:45 PM'
                    project:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 101
                        title:
                          type: string
                          example: 'Project Title'
                        status:
                          type: string
                          example: 'trashed'
                        created_at:
                          type: string
                          format: date-time
                          example: '2024-01-01 01:45 PM'
                        updated_at:
                          type: string
                          format: date-time
                          example: '2024-01-01 01:45 PM'

  '/approve/project/store':
    post:
      tags:
        - projects
      description: Create a new project
      operationId: store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 'New Project Title'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 201
                  result:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      title:
                        type: string
                        example: 'New Project Title'
                      created_at:
                        type: string
                        format: date-time
                        example: '2024-12-31T11:36:00Z'
                      updated_at:
                        type: string
                        format: date-time
                        example: '2024-12-31T11:36:00Z'
                  message:
                    type: string
                    example: 'Project created successfully.'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'Project not created successfully.'

  '/approve/update/{id}':
    post:
      tags:
        - projects
      description: Updates the approval sequence for a project.
      operationId: update
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the approval to update.
          schema:
            type: integer
      responses:
        '200':
          description: Project approved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  result:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      project_id:
                        type: integer
                        example: 101
                      sequence:
                        type: integer
                        example: 2
                      approved:
                        type: boolean
                        example: 0
                      deleted_at:
                        type: string
                        format: date-time
                        example: null
                      created_at:
                        type: string
                        format: date-time
                        example: '2024-01-01 01:45 PM'
                      updated_at:
                        type: string
                        format: date-time
                        example: '2024-01-01 01:45 PM'
                  message:
                    type: string
                    example: 'Project approved successfully.'
        '404':
          description: Project not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'Project is not found.'

  '/approve/restore/{id}':
    post:
      tags:
        - projects
      description: Restores a trashed project.
      operationId: restore
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the approval to restore.
          schema:
            type: integer
      responses:
        '200':
          description: Project restored successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  result:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      project_id:
                        type: integer
                        example: 101
                      sequence:
                        type: integer
                        example: 2
                      approved:
                        type: boolean
                        example: 0
                      deleted_at:
                        type: string
                        format: date-time
                        example: null
                      created_at:
                        type: string
                        format: date-time
                        example: '2024-01-01 01:45 PM'
                      updated_at:
                        type: string
                        format: date-time
                        example: '2024-01-01 01:45 PM'
                  message:
                    type: string
                    example: 'Project restored successfully.'
        '404':
          description: Project not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'Project not found.'

  '/approve/unapproved/{id}':
    post:
      tags:
        - projects
      description: Unapprove a project, decreasing the approval sequence.
      operationId: unapproved
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the approval to unapprove.
          schema:
            type: integer
      responses:
        '200':
          description: Project unapproved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  result:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      project_id:
                        type: integer
                        example: 101
                      sequence:
                        type: integer
                        example: 3
                      approved:
                        type: boolean
                        example: 0
                      deleted_at:
                        type: string
                        format: date-time
                        example: null
                      created_at:
                        type: string
                        format: date-time
                        example: '2024-01-01 01:45 PM'
                      updated_at:
                        type: string
                        format: date-time
                        example: '2024-01-01 01:45 PM'
                  message:
                    type: string
                    example: 'Project unapproved successfully.'
        '404':
          description: Project not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'Project is not found.'

  '/approve/delete/{id}':
    delete:
      tags:
        - projects
      description: Delete a project from the approval chain.
      operationId: delete
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the approval to delete.
          schema:
            type: integer
      responses:
        '200':
          description: Project deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Project deleted successfully.'
        '404':
          description: Project not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'Project not found.'

  '/approve/forceDelete/{id}':
    delete:
      tags:
        - projects
      description: Permanently delete a trashed project.
      operationId: forceDelete
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the approval to permanently delete.
          schema:
            type: integer
      responses:
        '200':
          description: Project permanently deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Project permanently deleted successfully.'
        '404':
          description: Project not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: 'Project not found.'